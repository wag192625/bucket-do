services:
  redis:
    container_name: redis-container
    image: redis
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    volumes:
      - redis-volume:/data
    networks:
      - redis-network
    env_file:
      - .env
    restart: always
  db:
    container_name: db-container
    image: mysql:8.0
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - db-network
    env_file:
      - .env
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  api:
    container_name: api-container
    build:
      context: ./api
      dockerfile: Dockerfile
      cache_from:
        - type=local,src=/tmp/docker-cache/api
      cache_to:
        - type=local,dest=/tmp/docker-cache/api,mode=max
    image: ${DOCKER_REGISTRY}/api-image:latest
    networks:
      - db-network
      - api-network
      - redis-network
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  client:
    container_name: client-container
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
      cache_from:
        - type=local,src=/tmp/docker-cache/client
      cache_to:
        - type=local,dest=/tmp/docker-cache/client,mode=max
    image: ${DOCKER_REGISTRY}/client-image:latest
    env_file:
      - .env
    ports:
      - '80:80'
      - '443:443'
    networks:
      - api-network
    volumes:
      - /etc/letsencrypt/live/${DOMAIN}/fullchain.pem:/etc/letsencrypt/live/${DOMAIN}/fullchain.pem
      - /etc/letsencrypt/live/${DOMAIN}/privkey.pem:/etc/letsencrypt/live/${DOMAIN}/privkey.pem
    depends_on:
      - db
      - api

volumes:
  db-volume:
  redis-volume:

networks:
  db-network:
  api-network:
  redis-network:
